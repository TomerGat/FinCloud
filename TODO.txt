for next version:
x implement monthly spending limit for checking accounts
x change transfer/withdraw functions in checking account to take monthly spending limit into consideration
# add additional page to ask for confirmation when spending beyond monthly spending limit
# change /new/checking page and ask for monthly spending limit, handle new response codes
x change create_checking_account function to add monthly spending limit
# add attribute to checking account: 'new_spending_limit', update monthly_spending_limit to the new limit when month is over
# add option to change monthly spending limit in checking account home page, alter new_spending_limit to change the spending limit
# print response 'monthly limit reached' when remaining_spending is negative but transaction is completed
# change allocation function in Cloud to consider remaining_spending in checking accounts
# add fee to transfer and withdraw functions when remaining_spending is negative after transaction
# build function to set fee according to overspending in relation to the spending limit

# check for responses that should be considered processing errors
# continue building anomaly detection algo
# add features to admin account

# implement object 'message': contains 'time' (get_date), message_str (string in message), title_str (string of subject)
# add attribute to accounts: 'inbox', contains a list of object 'message'
